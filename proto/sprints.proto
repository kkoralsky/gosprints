syntax = "proto3";

package pb;

service Sprints {
    rpc NewTournament(Tournament) returns (Tournament);
    rpc NewRace(Race) returns (Empty);
    rpc StartRace(Starter) returns (Player);
    rpc AbortRace(AbortMessage) returns (Empty);
    rpc ConfigureVis(VisConfiguration) returns (Empty);
    rpc GetResults(ResultSpec) returns (stream Result);
    rpc GetTournaments(Empty) returns (stream Tournament);
}

service Visual {
    rpc NewTournament(Tournament) returns (Empty);
    rpc NewRace(Race) returns (Empty);
    rpc StartRace(Starter) returns (Empty);
    rpc AbortRace(AbortMessage) returns (Empty);
    rpc UpdateRace(stream Racer) returns (Empty);
    rpc FinishRace(Results) returns (Empty);
    rpc ShowResults(Results) returns (Empty);
    rpc ConfigureVis(VisConfiguration) returns (Empty);
    rpc StopVis(Empty) returns (Empty);
}

message Empty {}

message AbortMessage {
    string message = 1;
}

message Race {
    repeated Player players = 1; 
    uint32 destValue = 2;
}

message DefinedRace {
    // how many races are remaining before this one will take place
    uint32 racesRemaining = 1;    
    repeated DefinedPlayer player = 2;
}

message Results {
    repeated Result result = 1;
}

message Result {
    Player player = 1;
    float result = 2;
    uint32 destValue = 3;
}

message DefinedPlayer {
    string color = 1;
    uint32 racesRemaining = 2;
    repeated DefinedPlayer otherContenders = 3;
}

enum Gender {
    MALE = 0;
    FEMALE = 1;
    OTHER = 2;
}

message ResultSpec {
    Gender gender = 1; 
    uint32 last = 2;
    string tournamentName = 3;
}

message Player {
    string name = 1;
    Gender gender = 2;
}

message Starter {
    uint32 countdownTime = 1;
}

message Racer {
    uint32 playerNum = 1;
    uint32 distance = 2;
}

message Tournament {
    string name = 1;
    uint32 destValue = 3;
    TournamentMode mode = 4;
    uint32 playerCount = 5;
    repeated string color = 6;

    enum TournamentMode {
        DISTANCE = 0;
        TIME = 1;
    }
}

message VisConfiguration {
    string hostName = 1; 
    string visName = 2;
    bool fullscreen = 3;
    uint32 resolutionWidth = 4;
    uint32 resolutionHeight = 5;
    uint32 movingUnit = 6;
}
